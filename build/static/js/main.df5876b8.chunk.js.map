{"version":3,"sources":["components/Header.js","yourdata.js","components/Resume.js","components/Home.js","components/Work.js","components/Contact.js","components/Landing.js","components/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","name","className","to","href","contactEmail","landingPageName","landingPagePara","landingPageImage","projects","id","title","short","tech","imageSrc","git","social","url","Resume","data","width","height","type","Home","paragraph","authorImage","src","alt","Work","map","project","key","Contact","socialLinks","Landing","contactPara","Clock","props","state","date","Date","this","timerID","setInterval","tick","setState","clearInterval","prevProps","prevState","console","log","nextProp","nextState","prop","style","fontSize","toLocaleTimeString","React","Component","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.df5876b8.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nconst Header = ({name})=>{\n    return(\n        <div>\n            <div className=\"header_container\">\n                <Link to=\"/\">\n                    <h1>{name}.</h1>\n                </Link>\n                <nav>\n                    <ul>\n                        <li>\n                            <a href=\"/#projects\">Projects</a>\n                        </li>\n                        <li>\n                            <a href=\"/#end\">Contact</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","export default {\n  //(Please Do Not Remove The comma(,) after every variable)\n\n  //Change The Website Template\n  name: \"Portfolio\",\n\n  //Contact Email\n  contactEmail: \"lipikas1277@gmail.com\",\n\n  // Landing Page Name\n  landingPageName:\"Lipika\",\n\n  // Landing Page Paragraph\n  landingPagePara:\n  \"A CS student at Rugters University.\",\n\n  // Landing Page Image (replace - root/public/assets/photo.jpg)\n  landingPageImage: \"assets/1.jpg\",\n\n  // Change Projects Here\n  projects: [\n    {\n      id: 1,\n      title: \"Shopping xExperience\",\n      short: \"eCommerce Store \",\n      tech: \"HTML, CSS, JS, MySQL\",\n      imageSrc: \"assets/33.png\",\n      git: \"https://github.com/lipikas/Shoppin-xExperience\"\n    },\n    {\n      id: 2,\n      title: \"RU Donate\", //Project Title - Add Your Project Title Here\n      short: \"RedCross Campaign \",\n      tech: \"HTML, CSS, Bootstrap, JS, Firebase\",\n      git: \"https://github.com/lipikas/Red-Cross-RUDonate\",\n      // Image Size Should be (300X300 px)\n      imageSrc: \"assets/111.png\",\n      //Project URL - Add Your Project Url Here\n      //url: \"https://trendymarkt.herokuapp.com/index.php\"\n    },\n    {\n      id: 3, //DO NOT CHANGE THIS (Please)ðŸ˜…\n      title: \"Pizzeria\",\n      short: \"An online pizza store \",\n      git: \"https://github.com/lipikas/Pizza-App\",\n      tech: \"Java, mySQL, Css, Bootstrap\",\n      imageSrc: \"assets/pizza.png\",\n    },\n  ],\n  // Contact Section\n  //contactPara:\n    //\"Feel free to contact me :)\",\n  social: [\n    // Add Or Remove The Link Accordingly\n    {\n      name: \"LinkedIn\",\n      url: \"https://www.linkedin.com/in/lipikasutrave/\"\n    },\n    {\n      name: \"Github\",\n      url: \"https://github.com/lipikas\"\n    },\n  ],\n  \n};","import React from 'react';\nimport Header from './Header';\nimport data from '../yourdata';\n\nconst Resume = () =>{\nreturn (\n  <div>\n    <Header name={data.name} contactEmail={data.contactEmail}/>\n    <div className=\"about_container\">\n    <object width=\"100%\" height=\"1100\" type=\"application/pdf\" data=\"assets/MatthewPan_Resume.pdf\">\n      <p>PDF cannot be displayed.</p>\n    </object>\n      <div className=\"spaceAbout\">\n      </div>\n    </div>\n  </div>\n);\n}\nexport default Resume;\n","import React from 'react';\n\nconst Home = ({name, paragraph, authorImage}) => {\n    return(\n    <div>\n        <div className=\"home_container\">\n            <div className=\"home_head_wrapper\">\n                <h1> \n                    Hello, I'm <br/>\n                    <span>{name}..</span>\n                    <br></br>\n                    <span>Sutrave...</span>\n                </h1>\n                <p id = 'head'>{paragraph}</p>\n                <p id = 'head2'>I enjoy learning different technologies and helping improve the efficiency of organizations whenever possible.</p>\n            </div>\n            <div className=\"image_container\">\n                <img src={authorImage} alt=\"Author\"/>\n                <div className=\"bg\"/>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Home;\n","import React from 'react';\n\n\nconst Work = ({projects}) =>{\n    return(\n        <div className=\"work_container\">\n            <h1 id = 'projects'>Projects.</h1>\n            <div className=\"projects_container\">\n                {projects.map(project => (\n                    <div key={project.id} className=\"project\">\n                        <div className=\"image\">\n                            <a href={project.url}>\n                                <img src={project.imageSrc} alt={project.title}/>\n                            </a>\n                        </div>\n                        <div className=\"title\">\n                            <strong>{project.title}</strong><br/>\n                            {project.short}\n                            <a className=\"git-color\" href={project.git}>(Git)</a>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Work\n","import React from 'react';\nimport { FaEnvelope, FaLinkedin, FaGithub } from \"react-icons/fa\";\n\nconst Contact = ({contactEmail, socialLinks})=>{\n    return (\n      <div className=\"contact_container\">\n        <h1>Feel free to contact me :)</h1>\n        <div className=\"social_links\">\n          <ul>\n            <li>\n              <a id=\"end\" href={`mailto:${contactEmail}`}>\n                <FaEnvelope/>\n              </a>\n            </li>\n            <li>\n              <a href={socialLinks[0].url}>\n                <FaLinkedin/>\n              </a>\n            </li>\n            <li>\n              <a href={socialLinks[1].url}>\n                <FaGithub/>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n}\n\nexport default Contact\n\n//import Peepo from './Peepo';\n//<Peepo style={{position: \"absolute\", height: \"5%\", top: 0.0001, bottom: 0, right: 0}}/>\n","import React from 'react';\nimport Header from './Header'\nimport Home from './Home';\nimport Work from './Work';\nimport Contact from './Contact';\n\nimport data from '../yourdata';\n\nconst Landing = ()=>{\n    return(\n    <div className=\"App\">\n      <div className=\"fullpage\">\n        <Header name={data.name} contactEmail = {data.contactEmail}/>\n        <Home name={data.landingPageName} paragraph = {data.landingPagePara} authorImage={data.landingPageImage}/>\n      </div>\n      <Work projects={data.projects}/>\n      <Contact contactEmail = {data.contactEmail} contactPara={data.contactPara} socialLinks={data.social}/>\n    </div>\n    )\n}\n\nexport default Landing\n","import React from 'react';\n\n\n// https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/ <----- React lifecycle diagram\nexport default class Clock extends React.Component{\n    constructor(props){\n        // call super or props will be undefined in constructor\n        super(props);\n        // this is the state, do not modify directly because react may\n        // update state and props asynchronously (use setState)\n        this.state = {date: new Date()};\n    }\n\n    // activates when DOM loads (render())\n    componentDidMount(){\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n\n    tick(){\n        // calling setStates lets react know to re-render since\n        // state variable has been updated (with the new date).\n        // if you had other variales inside the dictionary it's ok, will merge.\n        this.setState({date: new Date()});\n    }\n\n    // when component removed from DOM, stops the interval lifecycle\n    componentWillUnmount(){\n        clearInterval(this.timerID);\n    }\n\n    // when component updates (new prop/state). must be enclosed in condition\n    // otherwise will be infinite loop. activates right after update.\n    componentDidUpdate(prevProps, prevState){\n        // only activates if pre-update state is same as new one\n        if(this.state === prevState){\n            console.log(\"did update!\")\n        }\n    }\n    // activates when there are new props or state apart from initial one, just before update.\n    // can compare if prop and state changed, if no, return false for do not update.\n    // only used for performance improvement.\n    shouldComponentUpdate(nextProp, nextState){\n        if(this.prop !== nextProp && this.state !== nextState)\n            return true;\n    }\n\n    render(){\n        return(\n            <div>\n                <h1 style={{fontSize:\"40px\"}}>\n                    It is {this.state.date.toLocaleTimeString()}\n                </h1>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Resume from './components/Resume';\nimport Landing from './components/Landing';\nimport Test from './components/Test';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/resume\">\n          <Resume/>\n        </Route>\n        <Route path=\"/\" exact>\n          <Landing/>\n        </Route>\n        <Route path=\"/test\">\n          <Test/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}